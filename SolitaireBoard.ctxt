#BlueJ class context
comment0.target=SolitaireBoard
comment0.text=\n\ The\ ElevensBoard\ class\ represents\ the\ board\ in\ a\ game\ of\ Elevens.\n
comment1.params=
comment1.target=SolitaireBoard()
comment1.text=\n\ Creates\ a\ new\ <code>SolitaireBoard</code>\ instance.\n
comment10.params=selectedCards
comment10.target=java.util.List\ findStackingMove(java.util.List)
comment11.params=r1\ c1\ r2\ c2
comment11.target=java.util.List\ canMove(int,\ int,\ int,\ int)
comment12.params=r1\ c1\ r2\ c2
comment12.target=boolean\ opSuit(int,\ int,\ int,\ int)
comment13.params=r\ c
comment13.target=boolean\ OpSuit(int,\ int)
comment14.params=r\ c\ fPile
comment14.target=boolean\ sameSuit(int,\ int,\ int)
comment15.params=r\ c\ fPile
comment15.target=boolean\ oneLess(int,\ int,\ int)
comment16.params=r\ c
comment16.target=boolean\ OneLess(int,\ int)
comment17.params=selectedCards
comment17.target=java.util.List\ findJQK(java.util.List)
comment17.text=\n\ Look\ for\ a\ JQK\ in\ the\ selected\ cards.\n\ @param\ selectedCards\ selects\ a\ subset\ of\ this\ board.\ \ It\ is\ list\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ indexes\ into\ this\ board\ that\ are\ searched\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ find\ a\ JQK\ group.\n\ @return\ a\ list\ of\ the\ indexes\ of\ a\ JQK,\ if\ a\ JQK\ was\ found;\n\ \ \ \ \ \ \ \ \ an\ empty\ list,\ if\ a\ JQK\ was\ not\ found.\n
comment18.params=
comment18.target=boolean\ playIfPossible()
comment18.text=\n\ Looks\ for\ a\ legal\ play\ on\ the\ board.\ \ If\ one\ is\ found,\ it\ plays\ it.\n\ @return\ true\ if\ a\ legal\ play\ was\ found\ (and\ made);\ false\ othewise.\n
comment19.params=
comment19.target=boolean\ StackIfPossible()
comment19.text=\n\ Looks\ for\ a\ pair\ of\ non-face\ cards\ whose\ values\ sum\ to\ 11.\n\ If\ found,\ replace\ them\ with\ the\ next\ two\ cards\ in\ the\ deck.\n\ The\ simulation\ of\ this\ game\ uses\ this\ method.\n\ @return\ true\ if\ an\ 11-pair\ play\ was\ found\ (and\ made);\ false\ othewise.\n
comment2.params=selectedCards
comment2.target=boolean\ isLegal(java.util.List)
comment2.text=\n\ Determines\ if\ the\ selected\ cards\ form\ a\ valid\ group\ for\ removal.\n\ In\ Elevens,\ the\ legal\ groups\ are\ (1)\ a\ pair\ of\ non-face\ cards\n\ whose\ values\ add\ to\ 11,\ and\ (2)\ a\ group\ of\ three\ cards\ consisting\ of\n\ a\ jack,\ a\ queen,\ and\ a\ king\ in\ some\ order.\n\ @param\ selectedCards\ the\ list\ of\ the\ indices\ of\ the\ selected\ cards.\n\ @return\ true\ if\ the\ selected\ cards\ form\ a\ valid\ group\ for\ removal;\n\ \ \ \ \ \ \ \ \ false\ otherwise.\n
comment20.params=
comment20.target=boolean\ playJQKIfPossible()
comment20.text=\n\ Looks\ for\ a\ group\ of\ three\ face\ cards\ JQK.\n\ If\ found,\ replace\ them\ with\ the\ next\ three\ cards\ in\ the\ deck.\n\ The\ simulation\ of\ this\ game\ uses\ this\ method.\n\ @return\ true\ if\ a\ JQK\ play\ was\ found\ (and\ made);\ false\ othewise.\n
comment3.params=
comment3.target=boolean\ anotherPlayIsPossible()
comment3.text=\n\ Determine\ if\ there\ are\ any\ legal\ plays\ left\ on\ the\ board.\n\ In\ Elevens,\ there\ is\ a\ legal\ play\ if\ the\ board\ contains\n\ (1)\ a\ pair\ of\ non-face\ cards\ whose\ values\ add\ to\ 11,\ or\ (2)\ a\ group\n\ of\ three\ cards\ consisting\ of\ a\ jack,\ a\ queen,\ and\ a\ king\ in\ some\ order.\n\ @return\ true\ if\ there\ is\ a\ legal\ play\ left\ on\ the\ board;\n\ \ \ \ \ \ \ \ \ false\ otherwise.\n
comment4.params=r\ c
comment4.target=boolean\ dealMoveIsPossibleAt(int,\ int)
comment5.params=
comment5.target=boolean\ dealMoveIsPossible()
comment6.params=selectedCards
comment6.target=java.awt.Point\ findFoundationMove(java.util.List)
comment6.text=\n\ Look\ for\ an\ 11-pair\ in\ the\ selected\ cards.\n\ @param\ selectedCards\ selects\ a\ subset\ of\ this\ board.\ \ It\ is\ list\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ indexes\ into\ this\ board\ that\ are\ searched\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ find\ an\ 11-pair.\n\ @return\ a\ list\ of\ the\ indexes\ of\ an\ 11-pair,\ if\ an\ 11-pair\ was\ found;\n\ \ \ \ \ \ \ \ \ an\ empty\ list,\ if\ an\ 11-pair\ was\ not\ found.\n
comment7.params=selectedCards
comment7.target=java.awt.Point\ findDealMove(java.util.List)
comment8.params=
comment8.target=boolean\ canDeal()
comment9.params=r\ c\ fPile
comment9.target=boolean\ canMoveToFoundation(int,\ int,\ int)
numComments=21
